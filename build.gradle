// Fabric build script
// 24/05/2019
// https://github.com/FabricMC/fabric-example-mod/blob/master/build.gradle

plugins {
    id 'java-library'
    id 'fabric-loom' version '0.2.5-SNAPSHOT'
    id 'maven-publish'
}

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8

version = "$project.minecraft_version-${project.version}.build+${System.env.TRAVIS_BUILD_NUMBER ?: 0}"

if (System.env.TRAVIS_BRANCH != 'master') {
    version += "-${System.env.TRAVIS_BRANCH}"
}

if (project.release != 'RELEASE') {
    version += "-${project.release}"
}

group = project.group
description = project.displayname
archivesBaseName = project.name

minecraft {
    refmapName = "hdskins.mixin.refmap.json"
}

repositories {
    maven {
        name = 'minelp'
        url = 'http://repo.minelittlepony-mod.com/maven/snapshot'
    }
    maven {
        name = 'minelp-release'
        url = 'http://repo.minelittlepony-mod.com/maven/release'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"

    modApi "net.fabricmc:fabric-loader:${project.loader_version}"
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    modApi "net.fabricmc.fabric-api:fabric-api-base:0.1.0+"
    modApi "net.fabricmc.fabric-api:fabric-events-lifecycle-v0:0.1.0+"
    modApi "net.fabricmc.fabric-api:fabric-resource-loader-v0:0.1.0+"

    implementation "org.apache.httpcomponents:httpmime:${project.http_client_version}"
    include "org.apache.httpcomponents:httpmime:${project.http_client_version}"

    modApi "com.minelittlepony:Kirin:${project.kirin_version}"
    include "com.minelittlepony:Kirin:${project.kirin_version}"

    modImplementation "io.github.prospector.modmenu:ModMenu:1.6.2-93"
}

processResources {
    inputs.property 'version', project.version

    from(sourceSets.main.resources.srcDirs) {
        include 'fabric.mod.json'
        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'fabric.mod.json'
    }

    from 'LICENSE'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            afterEvaluate {
                artifact(remapJar)
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }

            pom {
                name = "HDSkins"
                description = "Ponyfy your Minecraft"
                url = "http://minelittlepony-mod.com"
                licenses {
                    license {
                        name = "MIT Public License"
                        url = "https://tlo.mit.edu/learn-about-intellectual-property/software-and-open-source-licensing"

                    }
                }
                developers {
                    developer {
                        id = "killjoy1221"
                        name = "Matthew Messinger"
                        email = "mattmess1221@gmail.com"
                    }
                    developer {
                        id = "sollace"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/MineLittlePony/HDSkins.git'
                    developerConnection = 'scm:git:ssh://github.com/MineLittlePony/HDSkins.git'
                    url = 'https://github.com/MineLittlePony/HDSkins'
                }
            }
        }
    }

    repositories {
        maven {
            name = "MineLittlePony"
            def mvn = 's3://repo.minelittlepony-mod.com/maven'
            url = release == 'SNAPSHOT' ? "$mvn/snapshot" : "$mvn/release"

            credentials(AwsCredentials) {
                accessKey = System.env.ACCESS_KEY
                secretKey = System.env.SECRET_KEY
            }
        }
    }
}
